
./smash:     file format elf32-i386


Disassembly of section .init:

0804835c <_init>:
 804835c:	53                   	push   %ebx
 804835d:	83 ec 08             	sub    $0x8,%esp
 8048360:	e8 bb 00 00 00       	call   8048420 <__x86.get_pc_thunk.bx>
 8048365:	81 c3 9b 1c 00 00    	add    $0x1c9b,%ebx
 804836b:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048371:	85 c0                	test   %eax,%eax
 8048373:	74 05                	je     804837a <_init+0x1e>
 8048375:	e8 56 00 00 00       	call   80483d0 <__gmon_start__@plt>
 804837a:	83 c4 08             	add    $0x8,%esp
 804837d:	5b                   	pop    %ebx
 804837e:	c3                   	ret    

Disassembly of section .plt:

08048380 <printf@plt-0x10>:
 8048380:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048386:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804838c:	00 00                	add    %al,(%eax)
	...

08048390 <printf@plt>:
 8048390:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048396:	68 00 00 00 00       	push   $0x0
 804839b:	e9 e0 ff ff ff       	jmp    8048380 <_init+0x24>

080483a0 <fflush@plt>:
 80483a0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483a6:	68 08 00 00 00       	push   $0x8
 80483ab:	e9 d0 ff ff ff       	jmp    8048380 <_init+0x24>

080483b0 <gets@plt>:
 80483b0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483b6:	68 10 00 00 00       	push   $0x10
 80483bb:	e9 c0 ff ff ff       	jmp    8048380 <_init+0x24>

080483c0 <__stack_chk_fail@plt>:
 80483c0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483c6:	68 18 00 00 00       	push   $0x18
 80483cb:	e9 b0 ff ff ff       	jmp    8048380 <_init+0x24>

080483d0 <__gmon_start__@plt>:
 80483d0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483d6:	68 20 00 00 00       	push   $0x20
 80483db:	e9 a0 ff ff ff       	jmp    8048380 <_init+0x24>

080483e0 <__libc_start_main@plt>:
 80483e0:	ff 25 20 a0 04 08    	jmp    *0x804a020
 80483e6:	68 28 00 00 00       	push   $0x28
 80483eb:	e9 90 ff ff ff       	jmp    8048380 <_init+0x24>

Disassembly of section .text:

080483f0 <_start>:
 80483f0:	31 ed                	xor    %ebp,%ebp
 80483f2:	5e                   	pop    %esi
 80483f3:	89 e1                	mov    %esp,%ecx
 80483f5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483f8:	50                   	push   %eax
 80483f9:	54                   	push   %esp
 80483fa:	52                   	push   %edx
 80483fb:	68 20 86 04 08       	push   $0x8048620
 8048400:	68 b0 85 04 08       	push   $0x80485b0
 8048405:	51                   	push   %ecx
 8048406:	56                   	push   %esi
 8048407:	68 16 85 04 08       	push   $0x8048516
 804840c:	e8 cf ff ff ff       	call   80483e0 <__libc_start_main@plt>
 8048411:	f4                   	hlt    
 8048412:	66 90                	xchg   %ax,%ax
 8048414:	66 90                	xchg   %ax,%ax
 8048416:	66 90                	xchg   %ax,%ax
 8048418:	66 90                	xchg   %ax,%ax
 804841a:	66 90                	xchg   %ax,%ax
 804841c:	66 90                	xchg   %ax,%ax
 804841e:	66 90                	xchg   %ax,%ax

08048420 <__x86.get_pc_thunk.bx>:
 8048420:	8b 1c 24             	mov    (%esp),%ebx
 8048423:	c3                   	ret    
 8048424:	66 90                	xchg   %ax,%ax
 8048426:	66 90                	xchg   %ax,%ax
 8048428:	66 90                	xchg   %ax,%ax
 804842a:	66 90                	xchg   %ax,%ax
 804842c:	66 90                	xchg   %ax,%ax
 804842e:	66 90                	xchg   %ax,%ax

08048430 <deregister_tm_clones>:
 8048430:	b8 37 a0 04 08       	mov    $0x804a037,%eax
 8048435:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 804843a:	83 f8 06             	cmp    $0x6,%eax
 804843d:	77 01                	ja     8048440 <deregister_tm_clones+0x10>
 804843f:	c3                   	ret    
 8048440:	b8 00 00 00 00       	mov    $0x0,%eax
 8048445:	85 c0                	test   %eax,%eax
 8048447:	74 f6                	je     804843f <deregister_tm_clones+0xf>
 8048449:	55                   	push   %ebp
 804844a:	89 e5                	mov    %esp,%ebp
 804844c:	83 ec 18             	sub    $0x18,%esp
 804844f:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 8048456:	ff d0                	call   *%eax
 8048458:	c9                   	leave  
 8048459:	c3                   	ret    
 804845a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048460 <register_tm_clones>:
 8048460:	b8 34 a0 04 08       	mov    $0x804a034,%eax
 8048465:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 804846a:	c1 f8 02             	sar    $0x2,%eax
 804846d:	89 c2                	mov    %eax,%edx
 804846f:	c1 ea 1f             	shr    $0x1f,%edx
 8048472:	01 d0                	add    %edx,%eax
 8048474:	d1 f8                	sar    %eax
 8048476:	75 01                	jne    8048479 <register_tm_clones+0x19>
 8048478:	c3                   	ret    
 8048479:	ba 00 00 00 00       	mov    $0x0,%edx
 804847e:	85 d2                	test   %edx,%edx
 8048480:	74 f6                	je     8048478 <register_tm_clones+0x18>
 8048482:	55                   	push   %ebp
 8048483:	89 e5                	mov    %esp,%ebp
 8048485:	83 ec 18             	sub    $0x18,%esp
 8048488:	89 44 24 04          	mov    %eax,0x4(%esp)
 804848c:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 8048493:	ff d2                	call   *%edx
 8048495:	c9                   	leave  
 8048496:	c3                   	ret    
 8048497:	89 f6                	mov    %esi,%esi
 8048499:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484a0 <__do_global_dtors_aux>:
 80484a0:	80 3d 44 a0 04 08 00 	cmpb   $0x0,0x804a044
 80484a7:	75 13                	jne    80484bc <__do_global_dtors_aux+0x1c>
 80484a9:	55                   	push   %ebp
 80484aa:	89 e5                	mov    %esp,%ebp
 80484ac:	83 ec 08             	sub    $0x8,%esp
 80484af:	e8 7c ff ff ff       	call   8048430 <deregister_tm_clones>
 80484b4:	c6 05 44 a0 04 08 01 	movb   $0x1,0x804a044
 80484bb:	c9                   	leave  
 80484bc:	f3 c3                	repz ret 
 80484be:	66 90                	xchg   %ax,%ax

080484c0 <frame_dummy>:
 80484c0:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 80484c5:	85 c0                	test   %eax,%eax
 80484c7:	74 1f                	je     80484e8 <frame_dummy+0x28>
 80484c9:	b8 00 00 00 00       	mov    $0x0,%eax
 80484ce:	85 c0                	test   %eax,%eax
 80484d0:	74 16                	je     80484e8 <frame_dummy+0x28>
 80484d2:	55                   	push   %ebp
 80484d3:	89 e5                	mov    %esp,%ebp
 80484d5:	83 ec 18             	sub    $0x18,%esp
 80484d8:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 80484df:	ff d0                	call   *%eax
 80484e1:	c9                   	leave  
 80484e2:	e9 79 ff ff ff       	jmp    8048460 <register_tm_clones>
 80484e7:	90                   	nop
 80484e8:	e9 73 ff ff ff       	jmp    8048460 <register_tm_clones>

080484ed <foo>:
 80484ed:	55                   	push   %ebp
 80484ee:	89 e5                	mov    %esp,%ebp
 80484f0:	83 ec 18             	sub    $0x18,%esp
 80484f3:	c7 44 24 04 2c a0 04 	movl   $0x804a02c,0x4(%esp)
 80484fa:	08 
 80484fb:	c7 04 24 40 86 04 08 	movl   $0x8048640,(%esp)
 8048502:	e8 89 fe ff ff       	call   8048390 <printf@plt>
 8048507:	a1 40 a0 04 08       	mov    0x804a040,%eax
 804850c:	89 04 24             	mov    %eax,(%esp)
 804850f:	e8 8c fe ff ff       	call   80483a0 <fflush@plt>
 8048514:	c9                   	leave  
 8048515:	c3                   	ret    

08048516 <main>:
 8048516:	55                   	push   %ebp
 8048517:	89 e5                	mov    %esp,%ebp
 8048519:	83 e4 f0             	and    $0xfffffff0,%esp
 804851c:	83 ec 20             	sub    $0x20,%esp
 804851f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048522:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048526:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804852c:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8048530:	31 c0                	xor    %eax,%eax
 8048532:	c7 44 24 08 2c a0 04 	movl   $0x804a02c,0x8(%esp)
 8048539:	08 
 804853a:	c7 44 24 04 ed 84 04 	movl   $0x80484ed,0x4(%esp)
 8048541:	08 
 8048542:	c7 04 24 6c 86 04 08 	movl   $0x804866c,(%esp)
 8048549:	e8 42 fe ff ff       	call   8048390 <printf@plt>
 804854e:	a1 40 a0 04 08       	mov    0x804a040,%eax
 8048553:	89 04 24             	mov    %eax,(%esp)
 8048556:	e8 45 fe ff ff       	call   80483a0 <fflush@plt>
 804855b:	8d 44 24 18          	lea    0x18(%esp),%eax
 804855f:	89 04 24             	mov    %eax,(%esp)
 8048562:	e8 49 fe ff ff       	call   80483b0 <gets@plt>
 8048567:	8d 44 24 18          	lea    0x18(%esp),%eax
 804856b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804856f:	c7 04 24 af 86 04 08 	movl   $0x80486af,(%esp)
 8048576:	e8 15 fe ff ff       	call   8048390 <printf@plt>
 804857b:	a1 40 a0 04 08       	mov    0x804a040,%eax
 8048580:	89 04 24             	mov    %eax,(%esp)
 8048583:	e8 18 fe ff ff       	call   80483a0 <fflush@plt>
 8048588:	b8 00 00 00 00       	mov    $0x0,%eax
 804858d:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8048591:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8048598:	74 05                	je     804859f <main+0x89>
 804859a:	e8 21 fe ff ff       	call   80483c0 <__stack_chk_fail@plt>
 804859f:	c9                   	leave  
 80485a0:	c3                   	ret    
 80485a1:	66 90                	xchg   %ax,%ax
 80485a3:	66 90                	xchg   %ax,%ax
 80485a5:	66 90                	xchg   %ax,%ax
 80485a7:	66 90                	xchg   %ax,%ax
 80485a9:	66 90                	xchg   %ax,%ax
 80485ab:	66 90                	xchg   %ax,%ax
 80485ad:	66 90                	xchg   %ax,%ax
 80485af:	90                   	nop

080485b0 <__libc_csu_init>:
 80485b0:	55                   	push   %ebp
 80485b1:	57                   	push   %edi
 80485b2:	31 ff                	xor    %edi,%edi
 80485b4:	56                   	push   %esi
 80485b5:	53                   	push   %ebx
 80485b6:	e8 65 fe ff ff       	call   8048420 <__x86.get_pc_thunk.bx>
 80485bb:	81 c3 45 1a 00 00    	add    $0x1a45,%ebx
 80485c1:	83 ec 1c             	sub    $0x1c,%esp
 80485c4:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80485c8:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80485ce:	e8 89 fd ff ff       	call   804835c <_init>
 80485d3:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80485d9:	29 c6                	sub    %eax,%esi
 80485db:	c1 fe 02             	sar    $0x2,%esi
 80485de:	85 f6                	test   %esi,%esi
 80485e0:	74 27                	je     8048609 <__libc_csu_init+0x59>
 80485e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485e8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80485ec:	89 2c 24             	mov    %ebp,(%esp)
 80485ef:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485f3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80485f7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485fb:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048602:	83 c7 01             	add    $0x1,%edi
 8048605:	39 f7                	cmp    %esi,%edi
 8048607:	75 df                	jne    80485e8 <__libc_csu_init+0x38>
 8048609:	83 c4 1c             	add    $0x1c,%esp
 804860c:	5b                   	pop    %ebx
 804860d:	5e                   	pop    %esi
 804860e:	5f                   	pop    %edi
 804860f:	5d                   	pop    %ebp
 8048610:	c3                   	ret    
 8048611:	eb 0d                	jmp    8048620 <__libc_csu_fini>
 8048613:	90                   	nop
 8048614:	90                   	nop
 8048615:	90                   	nop
 8048616:	90                   	nop
 8048617:	90                   	nop
 8048618:	90                   	nop
 8048619:	90                   	nop
 804861a:	90                   	nop
 804861b:	90                   	nop
 804861c:	90                   	nop
 804861d:	90                   	nop
 804861e:	90                   	nop
 804861f:	90                   	nop

08048620 <__libc_csu_fini>:
 8048620:	f3 c3                	repz ret 

Disassembly of section .fini:

08048624 <_fini>:
 8048624:	53                   	push   %ebx
 8048625:	83 ec 08             	sub    $0x8,%esp
 8048628:	e8 f3 fd ff ff       	call   8048420 <__x86.get_pc_thunk.bx>
 804862d:	81 c3 d3 19 00 00    	add    $0x19d3,%ebx
 8048633:	83 c4 08             	add    $0x8,%esp
 8048636:	5b                   	pop    %ebx
 8048637:	c3                   	ret    
